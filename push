#!/bin/sh

self=$0
env=
user=${user:-root}
repo=$(basename $(dirname $(readlink -f $self)))
run=run.sh
dest=/tmp/$repo

die() {
  printf "$@" >&2
  exit 64
}

parse() {
  [ $# -eq 1 -o $# -eq 2 ] || die '%s: <env> [roles]\n' $self

  env=$(readlink -f $1)
  . $env

  [ -n "$host" ] || die 'no host in %s\n' $env
  [ -n "$roles" ] || die 'no roles in %s\n' $env
  [ -n "$port" ] || port=22

  [ $# -ne 2 ] || roles="$2"
}

remote() {
  [ $host != localhost ]
}

mkrun() {
  cat <<EOF > $run
#!/bin/sh
$(sed 's/^_/export _/' $env)

role() {
  \${1}_role || {
    printf '%s failed\n' \$1 >&2
    exit 1
  }
}
EOF

  cat bin/*.sh roles/*.sh handlers/*.sh >> $run

  printf 'role %s\n' $roles >> $run
  chmod 700 $run
}

sync() {
  remote || return 0
  (
    cd ..
    tar cpf - $repo/$run $repo/templates $repo/files \
      | ssh -p $port $user@$host "tar xpf - -C $(dirname $dest)"
  )
}

execrun() {
  if remote; then
    ssh -p $port $user@$host $dest/$run
  else
    ./$run
  fi
}

parse "$@" && mkrun && sync && execrun
rm -f $run
